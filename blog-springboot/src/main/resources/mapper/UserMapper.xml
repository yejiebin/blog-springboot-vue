<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yjb.mapper.UserMapper">

    <resultMap id="User" type="User">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="password" column="password"/>
        <result property="mail" column="mail"/>
        <result property="state" column="state"/>
        <result property="login.ip" column="ip"/>
        <result property="login.time" column="time"/>
    </resultMap>

    <select id="findUserByName" parameterType="String" resultMap="User">
        SELECT
          id, name, password, mail, state
        FROM user
        WHERE name = #{username}
    </select>

    <select id="getUserCount" resultType="Long" parameterType="String">
        SELECT COUNT(1)
        FROM user
        <where>
            <if test='_parameter != "" and _parameter != null'>
                name LIKE '%${_parameter}%'
            </if>
        </where>
    </select>

    <select id="findUser" resultMap="User">
        SELECT
          u.id, u.name, u.password, u.mail, u.state,
          l.ip, l.time
        FROM user u LEFT JOIN login l ON u.id = l.user_id
        <where>
            <if test='keyword != "" and keyword != null'>
                u.name LIKE '%${keyword}%'
            </if>
        </where>
        ORDER BY l.time DESC
        LIMIT #{start}, #{showCount}
    </select>

    <select id="findUserByMail" resultMap="User">
        SELECT
          u.id, u.name, u.password, u.mail, u.state
        FROM user u
        WHERE u.mail = #{mail}
    </select>

    <update id="updateUserState" parameterType="User">
        UPDATE user
        SET state = #{state}
        WHERE id = #{id}
    </update>

    <update id="updateUserPassword" parameterType="User">
        UPDATE user
        SET password = #{password}
        <where>
            <choose>
                <when test="id != null">
                    id=#{id}
                </when>
                <when test="name != null and name != ''">
                    and name=#{name}
                </when>
                <otherwise>
                    and mail=#{mail}
                </otherwise>
            </choose>
        </where>
    </update>

    <update id="updateUserMail" parameterType="User">
        UPDATE user
        SET mail = #{mail}
        <where>
            <choose>
                <when test="id != null">
                    id=#{id}
                </when>
                <otherwise>
                    and mail=#{mail}
                </otherwise>
            </choose>
        </where>
    </update>

    <insert id="saveUser" parameterType="User" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO user VALUES (null,#{name},#{password},#{mail},#{state})
    </insert>
</mapper>