<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yjb.mapper.BlogMapper">

    <resultMap id="Blog" type="Blog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="body" column="body"/>
        <result property="discussCount" column="discussCount"/>
        <result property="blogViews" column="blogViews"/>
        <result property="time" column="time"/>
        <result property="state" column="state"/>
        <result property="user.id" column="user_id"/>
        <result property="user.name" column="user_name"/>
    </resultMap>

    <select id="findHotBlog" parameterType="Integer" resultMap="Blog">
        SELECT
          id, title, body, discussCount, blogViews, time, state
        FROM blog
        WHERE state = 1
        ORDER BY blogViews DESC,discussCount DESC
        LIMIT 0,#{count}
    </select>

    <select id="statisticalBlogByMonth" parameterType="Integer" resultType="Map">
        SELECT
          YEAR(time) year, MONTH(time) month, COUNT(1) count
        FROM blog
        GROUP BY year,month
        ORDER BY time DESC
        LIMIT 0, #{count}
    </select>

    <select id="getHomeBlogCount" resultType="Long">
        SELECT
          COUNT(1)
        FROM blog
        WHERE state = 1
    </select>

    <select id="findHomeBlog" resultMap="Blog">
        SELECT
          b.id, b.title, b.body, b.discussCount, b.blogViews,
          b.time, b.state, b.user_id, u.name user_name
        FROM blog b LEFT JOIN user u on b.user_id = u.id
        WHERE b.state = 1
        ORDER BY b.time DESC
        LIMIT #{start}, #{showCount}
    </select>

    <select id="searchBlog" resultMap="Blog">
        SELECT
          b.id, b.title, b.body, b.discussCount, b.blogViews,
          b.time, b.state, b.user_id, u.name user_name
        FROM blog b LEFT JOIN user u on b.user_id = u.id
        WHERE b.state = 1 AND (b.title LIKE '%${searchText}%' OR b.body LIKE '%${searchText}%')
        ORDER BY b.time DESC
        LIMIT #{start}, #{showCount}
    </select>

    <select id="findAllBlog" resultMap="Blog">
        SELECT
          b.id, b.title, b.body, b.discussCount, b.blogViews,
          b.time, b.state, b.user_id, u.name user_name
        FROM blog b LEFT JOIN user u on b.user_id = u.id
        ORDER BY b.state DESC ,b.time DESC
        LIMIT #{start}, #{showCount}
    </select>

    <select id="searchAllBlog" resultMap="Blog">
        SELECT
          b.id, b.title, b.body, b.discussCount, b.blogViews,
          b.time, b.state, b.user_id, u.name user_name
        FROM blog b LEFT JOIN user u on b.user_id = u.id
        WHERE title LIKE '%${searchText}%' OR body LIKE '%${searchText}%'
        ORDER BY b.time DESC
        LIMIT #{start}, #{showCount}
    </select>

    <select id="getSearchBlogCount" parameterType="String" resultType="Long">
        SELECT COUNT(1)
        FROM blog
        WHERE ( title LIKE '%${_parameter}%' OR body LIKE '%${_parameter}%') AND state = 1
    </select>

    <select id="getSearchAllBlogCount" parameterType="String" resultType="Long">
        SELECT COUNT(1)
        FROM blog
        WHERE ( title LIKE '%${_parameter}%' OR body LIKE '%${_parameter}%')
    </select>

    <select id="getAllBlogCount" parameterType="String" resultType="Long">
        SELECT COUNT(1)
        FROM blog
    </select>

    <select id="getBlogCountByUser" parameterType="User" resultType="Long">
        SELECT COUNT(1)
        FROM blog
        WHERE state = 1 AND user_id = #{id}
    </select>

    <select id="findBlogByUser" parameterType="User" resultMap="Blog">
        SELECT
          b.id, b.title, b.body, b.discussCount, b.blogViews,
          b.time, b.state, b.user_id, u.name user_name
        FROM blog b LEFT JOIN user u on b.user_id = u.id
        WHERE b.state = 1 AND u.id = #{user.id}
        ORDER BY b.time DESC
        LIMIT #{start}, #{showCount}
    </select>

    <select id="findBlogById" parameterType="Long" resultMap="Blog">
        SELECT
          b.id, b.title, b.body, b.discussCount, b.blogViews,
          b.time, b.state, b.user_id, u.name user_name
        FROM blog b LEFT JOIN user u on b.user_id = u.id
        WHERE b.state = 1 AND b.id = #{blogId}
    </select>

    <select id="findBlogCountByTagId" parameterType="Long" resultType="Long">
        SELECT COUNT(1)
        FROM blog_tag bt LEFT JOIN blog b on bt.blog_id = b.id
        WHERE bt.tag_id = #{tagId} AND b.state = 1
    </select>

    <update id="updateBlogDiscussCount" parameterType="Blog">
        UPDATE blog
        SET discussCount = #{discussCount}
        WHERE id = #{id}
    </update>

    <update id="updateBlogViews" parameterType="Blog">
        UPDATE blog
        SET blogViews = #{blogViews}
        WHERE id = #{id}
    </update>

    <update id="updateBlog" parameterType="Blog">
        UPDATE blog
        SET title = #{title},
            body = #{body}
        WHERE id = #{id}
    </update>

    <update id="updateBlogState">
        UPDATE blog
        SET state = #{blogState}
        WHERE id = #{blogId}
    </update>

    <insert id="saveBlogTag">
        INSERT INTO blog_tag
        VALUES (#{blogId},#{tagId})
    </insert>

    <insert id="saveBlog" parameterType="Blog" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO blog
        VALUES (null,#{title},#{body},#{discussCount},#{blogViews},#{time},#{state},#{user.id})
    </insert>


</mapper>